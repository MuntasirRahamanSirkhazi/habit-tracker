{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/my%20pc/OneDrive/Desktop/habit%20tarcker/habittracker/src/lib/supabaseClient.js"],"sourcesContent":["// src/lib/supabaseClient.js\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,uMAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/my%20pc/OneDrive/Desktop/habit%20tarcker/habittracker/src/app/signup/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { supabase } from \"../../lib/supabaseClient\";\r\n\r\nexport default function SignupPage() {\r\n  const [form, setForm] = useState({ name: \"\", email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    // Sign up user with Supabase Auth\r\n    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({\r\n      email: form.email,\r\n      password: form.password,\r\n      options: {\r\n        data: { name: form.name }\r\n      }\r\n    });\r\n\r\n    if (signUpError) {\r\n      setError(signUpError.message);\r\n      return;\r\n    }\r\n\r\n    // Get the user id from Supabase Auth\r\n    const userId = signUpData?.user?.id;\r\n\r\n    // Check if email already exists in your custom users table\r\n    const { data: existingUser } = await supabase\r\n      .from(\"users\")\r\n      .select(\"id\")\r\n      .eq(\"email\", form.email)\r\n      .single();\r\n\r\n    if (!existingUser && userId) {\r\n      // Insert into your custom users table (with name and auth user id)\r\n      const { error: dbError } = await supabase\r\n        .from(\"users\")\r\n        .insert([\r\n          {\r\n            auth_user_id: userId, // Make sure your table has this column (type: uuid)\r\n            name: form.name,\r\n            email: form.email,\r\n          }\r\n        ]);\r\n      if (dbError) {\r\n        setError(dbError.message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setSuccess(\"Account created! Please check your email to verify.\");\r\n    setForm({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n      <div className=\"bg-white rounded-xl shadow-md p-8 w-full max-w-md\">\r\n        <h2 className=\"text-3xl font-bold text-blue-600 text-center mb-8\">\r\n          Create an Account\r\n        </h2>\r\n        <form className=\"space-y-5\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label className=\"block font-semibold mb-1\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name\"\r\n              className=\"w-full border rounded-md px-4 py-3 mt-1 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n              value={form.name}\r\n              onChange={e => setForm({ ...form, name: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block font-semibold mb-1\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              className=\"w-full border rounded-md px-4 py-3 mt-1 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n              value={form.email}\r\n              onChange={e => setForm({ ...form, email: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block font-semibold mb-1\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              className=\"w-full border rounded-md px-4 py-3 mt-1 focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n              value={form.password}\r\n              onChange={e => setForm({ ...form, password: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 rounded-md transition\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n          {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n          {success && <p className=\"text-green-600 text-center\">{success}</p>}\r\n        </form>\r\n        <p className=\"text-center mt-6 text-lg\">\r\n          Already have an account?{\" \"}\r\n          <Link href=\"/login\" className=\"text-blue-600 font-semibold hover:underline\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}